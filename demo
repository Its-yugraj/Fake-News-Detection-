import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt
import tkinter as tk
from tkinter import messagebox

# ------------------ ML MODEL TRAINING ------------------
# Load dataset
df = pd.read_csv("fake_news_dataset.csv")

# Features (text) and labels
X = df['text']
y = df['label'].str.upper()   # Standardize labels

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# TF-IDF vectorizer
tfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)

# Fit and transform
tfidf_train = tfidf_vectorizer.fit_transform(X_train)
tfidf_test = tfidf_vectorizer.transform(X_test)

# Model
pac = PassiveAggressiveClassifier(max_iter=50)
pac.fit(tfidf_train, y_train)

# Predictions for accuracy
y_pred = pac.predict(tfidf_test)
y_pred = pd.Series(y_pred).str.upper()

# Accuracy
score = accuracy_score(y_test, y_pred)
print(f"Accuracy: {round(score*100, 2)}%")

# Confusion matrix
labels = ['FAKE', 'REAL']
cm = confusion_matrix(y_test, y_pred, labels=labels)
sns.heatmap(cm, annot=True, fmt='d', cmap="Blues", 
            xticklabels=labels, yticklabels=labels)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()

# ------------------ TKINTER UI ------------------
def check_news():
    text = entry.get("1.0", tk.END).strip()
    if text:
        vec = tfidf_vectorizer.transform([text])
        prediction = pac.predict(vec)[0]
        messagebox.showinfo("Prediction", 
                            f"Prediction: {prediction}\nModel Accuracy: {round(score*100, 2)}%")
    else:
        messagebox.showwarning("Input Error", "Please enter news text!")

root = tk.Tk()
root.title("ðŸ“° Fake News Detector")

label = tk.Label(root, text="Enter News Article:")
label.pack()

entry = tk.Text(root, height=10, width=60)
entry.pack()

btn = tk.Button(root, text="Check News", command=check_news)
btn.pack()

root.mainloop()
